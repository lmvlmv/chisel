on: [push, pull_request]
name: CI
jobs:
  # ================
  # TEST JOB
  #   runs on every push and PR
  #   runs 2x3 times (see matrix)
  # ================
  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: go build -v .
      - name: Test
        run: go test -v ./...
        env:
          GODEBUG: x509ignoreCN=0
  # ================
  # RELEASE JOB
  #   runs after a success test
  #   only runs on push "v*" tag
  # ================
  # release:
  #   name: Release
  #   needs: test
  #   # if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v1
  #     - name: goreleaser
  #       if: success()
  #       uses: docker://goreleaser/goreleaser:latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         args: release --config .github/goreleaser.yml

  #         jobs:
    goreleaser:
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        -
          name: Set up Go
          uses: actions/setup-go@v3
        -
          name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v3
          with:
            # either 'goreleaser' (default) or 'goreleaser-pro'
            distribution: goreleaser
            version: latest
            args: release --rm-dist 
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
            # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
